{"ast":null,"code":"export function getAnswers(params) {\n  return [params.channel, params.carType, params.fuelType, params.totCost, params.downPayment, params.term];\n}\nexport function getHeaders(params) {\n  return ['channel', 'car-type', 'fuel-type', 'tot-cost', 'down-payment', 'term'];\n}\nexport function getUserFriendlyHeaders(params) {\n  return ['Channel', 'Car Type', 'Fuel Type', 'Car Price', 'Down Payment', 'Loan Term'];\n}\nexport function string2currency(number) {\n  return new Intl.NumberFormat('se-SE', {\n    style: 'currency',\n    currency: 'SEK'\n  }).format(parseFloat(number));\n}","map":{"version":3,"sources":["/Users/jeanniehe/Documents/GitHub/CarFinance/car-finance/src/utils.js"],"names":["getAnswers","params","channel","carType","fuelType","totCost","downPayment","term","getHeaders","getUserFriendlyHeaders","string2currency","number","Intl","NumberFormat","style","currency","format","parseFloat"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,MAApB,EAA2B;AAC9B,SAAO,CAACA,MAAM,CAACC,OAAR,EAAiBD,MAAM,CAACE,OAAxB,EAAiCF,MAAM,CAACG,QAAxC,EAAkDH,MAAM,CAACI,OAAzD,EAAkEJ,MAAM,CAACK,WAAzE,EACPL,MAAM,CAACM,IADA,CAAP;AAEH;AAED,OAAO,SAASC,UAAT,CAAoBP,MAApB,EAA2B;AAC9B,SAAO,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,UAArC,EACP,cADO,EACS,MADT,CAAP;AAEH;AAED,OAAO,SAASQ,sBAAT,CAAgCR,MAAhC,EAAuC;AAC1C,SAAO,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,WAArC,EACP,cADO,EACS,WADT,CAAP;AAEH;AAED,OAAO,SAASS,eAAT,CAAyBC,MAAzB,EAAgC;AACnC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAA/B,EAAuEC,MAAvE,CACHC,UAAU,CAACN,MAAD,CADP,CAAP;AAEH","sourcesContent":["export function getAnswers(params){\n    return [params.channel, params.carType, params.fuelType, params.totCost, params.downPayment,\n    params.term];\n}\n\nexport function getHeaders(params){\n    return ['channel', 'car-type', 'fuel-type', 'tot-cost', \n    'down-payment', 'term'];\n}\n\nexport function getUserFriendlyHeaders(params){\n    return ['Channel', 'Car Type', 'Fuel Type', 'Car Price', \n    'Down Payment', 'Loan Term'];\n}\n\nexport function string2currency(number){\n    return new Intl.NumberFormat('se-SE', { style: 'currency', currency: 'SEK' }).format(\n        parseFloat(number));\n}\n"]},"metadata":{},"sourceType":"module"}